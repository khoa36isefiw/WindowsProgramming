<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnEdit.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAA
        5wAAAOcB8BtYtQAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAAO9SURBVFhHxZd7
        SFNRHMfV27a7h69pzhZh2EMpc/aCSF2Wf4j9kY9FWUvXQwom9Pgn66+ysqcRUURQBPbOXqaURURKRVEW
        QYX2gBK0IitjCZlW3845l922ebfdyUY/+HIP3HPP53PPudu9J8ylDCqV6oJCoeglbYQidGzCOE/aBhK3
        4siJx5PSTT9rT9bh0pWmkISOnTYp/SfP862EGSGghcoIDw/Hi5cd+OLoD2met78DZRGmSUALVaDRaPul
        LghFKIsyBbRQhf9BoFBACxVUgbed3Th19hKabrZIng+pQPPdRzAmDEeMRg0Fx6GooBAfPve69QmZAIXr
        o6OweOpk9NXsxvPK9TDGRCE/L89NIiQCTrh12hQM7N2DP/v2srRtrBQlur/1sb5SAjOSx4zt8RxUbhg8
        Nho6lRJdVZtEuKtErFaNA4eOsP5SAmFfHQOXPQeWEye8ZHYSpo/XI82YgI9bqwZJFKWnoXylnV0TNAEn
        3Jo7Gr+aLOi5WCApcX/tGmjI7ByrPcOukxKYkJll7vIE+IoAjxHhuDGfxVOCwqPVPGylNvFaKQH16XP1
        La4AX/EG95RITYxn8DICdz6ANJJL0N3TV+8K8RZf8PrNM/GjsYi1b2zPZm/AUg84jZRA9gjjyO+unaTS
        cq8VcfoYLJiVhIFr7vB1xeOg5Yeh48RctB7MRWykGtYlZYPgNFICfv8HfME3LEwlDxmHW7vMfuE0AQsE
        E04TkECw4TSyBXzB3x7PR6xOidt7ZgUEp5ElcOf+E69Pe9vRPHb8fd2CB/vnIFrHo7RsqSw4jSyBYssC
        9jNq3JLpBv9yYR6SEjTov1o8JDiNXwE6WFxcPDIypkKpVODatiw3CZqhwmn8Cty+85DdfXPzI1RUrINS
        MQwNVf9mItA194xfgc1bdyA5eQza2ztZ7Pa14kwEcudPnr3C0mXlyMkyIyczWwwXwf0hTO8fpdnmXPLp
        HIHq6hpRwmYrZxJRWpUs+JuOjzDExyPHaETlxIks9pQUcOSTXKdWdxKmXkALJQq8/+QgIB6jRuYzCYul
        BCbTFHDk+06r1cJesVrWtB8+WovEyEj0W60gLwQ4SkowMzHRCR8hYP+VKHC54Tpbf45TsKMz41NSsXiJ
        DTYypVJZXr7KbWNTvbMGJoOBwXsXLYKZzISOV3eRsYwkg0rcmLQ+bcOyFSslIb7iTUC8c56XvHNnBX1r
        RgXG6fWy4LTY5pRuHIO1OaUzQsaVBXdWAtm11pEt9HfSdlv/oUbD86/J0Qc8LOwvNLz2ssXWyCEAAAAA
        SUVORK5CYII=
</value>
  </data>
</root>